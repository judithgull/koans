@import "mixins";

html {
  min-height: 100%;
  font: $t-default-font-size/#{$t-default-line-height} $t-default-font-family;
  color: c(black);
  overflow-y: scroll;
}

html, body, .l-body {
  min-height: 100%;
  margin: 0;
}

strong {
  font-weight: 400;
}

// Remove text-shadow in selection highlight: h5bp.com/i
// These selection rule sets have to be separate.
// Customize the background color to match your design.
::-moz-selection {
  background: c(green);
  text-shadow: none;
}

::selection {
  background: c(green);
  text-shadow: none;
}

// Remove default fieldset styles.
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

// Allow only vertical resizing of textareas.
textarea {
  resize: vertical;
}

// buttons
.button {
  display: inline-block;
  border: 1px solid c(blue);
  border-radius: s(large);
  background-color: transparent;
  transition: border-color 200ms, color 200ms;
  padding: s(small) s(medium);
  font-family: $t-default-font-family;
  font-size: 1rem;
  color: c(blue);
  text-decoration: none;
  &--light {
    border: 1px solid c(white);
    color: c(white);
  }
  &:disabled {
    border-color: rgba(c(blue), 0.4);
    color: rgba(c(blue), 0.4);
  }
  &:hover {
    &:not([disabled]) {
      cursor: pointer;
      border-color: c(green);
      color: c(green);
    }
  }
  &-plus {
    display: block;
    width: s(huge);
    height: s(huge);
    padding: 0;
    margin: 0 auto s(medium);

    &:after {
      content: "╋";
    }
  }
  &-prev:before,
  &-next:after {
    content: "⌃";
    display: inline-block;
  }
  &-prev:before {
    transform: rotate(270deg);
  }
  &-next:after {
    transform: rotate(90deg);
  }
}

a.button {
  display: inline;
}

.button + .button {
  margin-left: s(medium);
}

//input fields
.input,
.textarea,
.select {
  @include t(paragraph);
  border: 1px solid c(black);
  border-radius: s(large);
  background-color: transparent;
  padding: s(small) s(medium);
  transition: border-color 200ms;
  &:focus {
    outline: none;
    border-color: c(purple);
  }
}

.input,
.textarea {
  box-sizing: border-box;
  width: 100%;
}

.custom-select {
  position: relative;
  display: inline-block;

  &:after {
    content: "";
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 5px solid c(black);
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }
}

.select {
  width: 200px;
}

.textarea {
  height: 150px;
}

.label {
  width: 100%;
  display: block;
}

.inline-label {
  margin-right: s(small);
}

// general typography styles

.t-title {
  @include t(title);
  margin: 0 0 s(large);
}

.t-title-small {
  @include t(title-small);
  margin: 0 0 s(medium);
}

.t-label {
  @include t(label);
  margin: 0 0 s(small);
}

.t-paragraph {
  @include t(paragraph);
  margin: 0 0 s(small);
}

.t-link {
  text-decoration: none;
  cursor: pointer;
  color: c(blue);
  transition: color 200ms;
  &:hover {
    color: c(green);
  }
  & + .t-link {
    margin-left: s(medium);
  }
}

// general card styles

.card {
  background-color: c(light-grey);
  padding: s(medium);
  margin-bottom: s(large);
}

// ng-view animation styles

.view-animate-container {
  position: relative;
  overflow: hidden;
  min-height: 100vh;
}

.view-animate.ng-enter, .view-animate.ng-leave {
  transition: all cubic-bezier(0.250, 0.460, 0.450, 0.940) 500ms;

  display: block;
  width: 100%;

  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.view-animate.ng-enter {
  left: 100%;
}

.view-animate.ng-enter.ng-enter-active {
  left: 0;
}

.view-animate.ng-leave.ng-leave-active {
  left: -100%;
}

.field-row {
  margin-bottom: s(large);
}

.form-error-msg {
  color: c(error);
  margin-top: s(small);
}
